name: "Quality Assurance"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

jobs:
  quality-assurance:
    name: "Quality Assurance"
    runs-on: ubuntu-latest
    steps:
    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: xdebug
        extensions: imagick, swoole, zip, mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, pdo

    - name: Debug output composer version
      run: composer -v

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Prepare environment
      run: echo 'APP_ENV=dev' > .env.local

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --no-progress

    - name: provide secrets
      env:
        SYMFONY_DECRYPTION_SECRET: ${{ secrets.SYMFONY_DECRYPTION_SECRET }}
      run: php bin/console secrets:decrypt-to-local --force --env=prod

    - name: Check that environment is configured correctly
      run: php ./bin/requirements-checker

    - name: PHP Security Checker
      uses: StephaneBour/actions-php-security-checker@1.1

    - name: php-codesniffer
      uses: pipeline-components/php-codesniffer@v0.12.3
      with:
        directory: src

    - name: prepare php-cs-fixer config
      run: cp .php-cs-fixer.dist.php .php-cs-fixer.php

    - name: PHP Code Style Fixer (php-cs-fixer)
      uses: StephaneBour/actions-php-cs-fixer@8.0-v3
      with:
        # Folder to check code style
        dir: src

    - name: output bin content for debug
      run: ls -lisa ./bin/

    - name: PHPUnit
      run: ./bin/phpunit

    - name: Cleanup Report Results
      shell: bash
      run: |
         sed -i 's/\(.*file="\).*e-planer\/\(.*"\)/\1\2/g' build/reports/junit.xml
         sed -i 's/\(.*name="\).*e-planer\/\(.*"\)/\1\2/g' build/reports/coverage-clover.xml

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results
        path: |
          build/reports/junit.xml
          build/reports/coverage-clover.xml

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: build/reports/junit.xml
        github_token: ${{ github.token }}

    - name: output reports content for debug
      run: ls -lisa ./build/reports/

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
